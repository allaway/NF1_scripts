fisher.test(challenge.df)$odds
f<-fisher.test(challenge.df)
fisher.test(challenge.df).estimate
fisher.test(challenge.df)$estimate
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-filter_(ptswNF1only, paste(g,"==0"))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-filter_(ptswJonly, paste(g,"==1"))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-filter_(ptswJandNF1, paste(g,"==1"))
nomut<-filter(bar3, NF1==0)
nomut<-filter_(nomut, paste(g,"==0"))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut))))
po <- c(f$p.value, f$estimate)
} , silent = TRUE)
})
foo<-as.numeric(as.character(foo))
names(foo)<-mutations[[i]]$gene
foo<-t(data.frame(as.list(foo)))
})
po<-c(1,"error")
p<-po[1]
o<-po[2]
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-filter_(ptswNF1only, paste(g,"==0"))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-filter_(ptswJonly, paste(g,"==1"))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-filter_(ptswJandNF1, paste(g,"==1"))
nomut<-filter(bar3, NF1==0)
nomut<-filter_(nomut, paste(g,"==0"))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut))))
c(f$p.value, f$estimate)
} , silent = TRUE)
})
foo<-as.numeric(as.character(foo))
names(foo)<-mutations[[i]]$gene
foo<-t(data.frame(as.list(foo)))
})
comuts[1]
View(comuts[1])
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-filter_(ptswNF1only, paste(g,"==0"))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-filter_(ptswJonly, paste(g,"==1"))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-filter_(ptswJandNF1, paste(g,"==1"))
nomut<-filter(bar3, NF1==0)
nomut<-filter_(nomut, paste(g,"==0"))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut))))
c(f$p.value, f$estimate)
} , silent = TRUE)
})
names(foo) <- mutations[[i]]$gene
ldply(foo)
})
comuts[1]
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-filter_(ptswNF1only, paste(g,"==0"))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-filter_(ptswJonly, paste(g,"==1"))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-filter_(ptswJandNF1, paste(g,"==1"))
nomut<-filter(bar3, NF1==0)
nomut<-filter_(nomut, paste(g,"==0"))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
c(f$p.value, f$estimate)
} , silent = TRUE)
})
names(foo) <- mutations[[i]]$gene
ldply(foo)
})
comuts[[1]]
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
c(f$p.value, f$estimate)
} , silent = TRUE)
})
names(foo) <- mutations[[i]]$gene
ldply(foo)
})
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
c(f$p.value, f$estimate)
} , silent = TRUE)
})
#names(foo) <- mutations[[i]]$gene
#ldply(foo)
})
names(foo) <- mutations[[i]]$gene
names(foo) <- mutations[["ACC"]]$gene
names(comuts) <- mutations[["ACC"]]$gene
unname(comuts)
comuts<-unname(comuts)
comuts<-apply(comuts, unname(comuts))
comuts<-apply(comuts, unname(x))
comuts<-apply(comuts, function(unname(x)))
apply(comuts, function(unname(x)))
comuts<-apply(comuts, function(x) unname(comuts)))
comuts<-apply(comuts, function(x) unname(comuts))
comuts<-apply(comuts, function(x) unname(x))
mutations[["ACC"]]$gene
mutations[["ACC"]]
names(comuts) <- mutations[[1]]
names(comuts) <- mutations[[1]]$gene
mutations[[1]]$gene
names(comuts) <- mutations[[1]]$gene
unname(comuts)
comuts<-unname(comuts)
names(comuts) <- mutations[[1]]$gene
is.numeric(comuts[[1]])
is.numeric(comuts[[1]])
is.array(comuts[[1]])
is.atomic(comuts[[1]])
typeof(comuts[[i]])
typeof(comuts[[1]])
typeof(comuts$1)
typeof(comuts[1])
typeof(comuts)
comuts
typeof(comuts[[896]])
typeof(comuts[896])
class(comuts[896])
is.atomic
is.atomic(comuts[896])
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
bar<-c(f$p.value, f$estimate)
names(bar) <- g
} , silent = TRUE)
})
comuts<-unname(comuts)
names(comuts) <- mutations[[1]]$gene
#ldply(foo)
})
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
bar<-c(f$p.value, f$estimate)
names(bar) <- g
} , silent = TRUE)
})
#comuts<-unname(comuts)
#names(comuts) <- mutations[[1]]$gene
#ldply(foo)
})
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
bar<-c(f$p.value, f$estimate)
names(bar) <- g
return(g)
} , silent = TRUE)
})
#comuts<-unname(comuts)
#names(comuts) <- mutations[[1]]$gene
#ldply(foo)
})
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
bar<-c(f$p.value, f$estimate)
names(bar) <- g
print(g)
} , silent = TRUE)
})
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
try({
samples.with.nf1.mut<-dplyr::select(mutations[[i]], gene, one_of(nf1$samples))
samples.with.nf1.mut<-dplyr::filter(samples.with.nf1.mut, gene!="Unknown")
samples.with.nf1.mut$sums<-rowSums(samples.with.nf1.mut[,-1])
#samples.with.nf1.mut<-samples.with.nf1.mut[order(-samples.with.nf1.mut$sums),]
#samples.with.nf1.mut$gene <- factor(samples.with.nf1.mut$gene, levels = samples.with.nf1.mut$gene)
})
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
try({
g<-mutations[[i]][j,1]
bar<-filter(mutations[[i]], gene == g)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-rbind(bar, bar2)
bar3<-t(select(bar3, -sums))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste(g,"==0")))
ptswJonly<-filter(bar3, NF1==0)
ptswJonly<-nrow(filter_(ptswJonly, paste(g,"==1")))
ptswJandNF1<-filter(bar3, NF1==1)
ptswJandNF1<-nrow(filter_(ptswJandNF1, paste(g,"==1")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste(g,"==0")))
f<-fisher.test((matrix(c(ptswJandNF1,ptswNF1only,ptswJonly,nomut), ncol = 2)))
bar<-c(f$p.value, f$estimate)
names(bar) <- g
print(g)
} , silent = TRUE)
})
#comuts<-unname(comuts)
#names(comuts) <- mutations[[1]]$gene
#ldply(foo)
})
