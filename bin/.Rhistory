pancancer.NF1comuts<-rbindlist(cancers, use.names = TRUE, fill = TRUE)
library(data.table)
library(dplyr)
library(synapseClient)
pancancer.NF1comuts<-rbindlist(cancers, use.names = TRUE, fill = TRUE)
pancancer.NF1comuts<-dplyr::select(pancancer.NF1comuts, Cancer_Type.x,Patient_ID,Hugo_Symbol,Chromosome,
Start_position,End_position,Strand,Variant_Classification,Reference_Allele,Tumor_Seq_Allele1,
Tumor_Seq_Allele2,dbSNP_RS,cDNA_Change,Codon_Change,Protein_Change,SwissProt_entry_Id,Description,
sums, mutation_count_in_NF1, ratios)
pancancer.NF1comuts<-dplyr::filter(pancancer.NF1comuts, mutation_count_in_NF1>0)
names(pancancer.NF1comuts)[names(pancancer.NF1comuts) == 'sums'] <- "mutations_in_cancer_type"
names(pancancer.NF1comuts)[names(pancancer.NF1comuts) == 'Cancer_Type.x'] <- "Cancer_Type"
names(pancancer.NF1comuts)[names(pancancer.NF1comuts) == 'ratios'] <- "mut_freq_in_cancer_type"
newcol
newcol<-TableColumn(name="mut_freq_in_cancer_type", columnType = "INTEGER")
schema<-synAddColumn(shema, newColumn)
schema<-synAddColumn(schema, newColumn)
schema<-synStore(schema)
queryResult<-synTableQuery("select * from syn8069190")
queryResult@values["mut_freq_in_cancer_type"] <- pancancer.NF1comuts$mut_freq_in_cancer_type
table<-synStore(queryResult)
schema<-synGet("syn8069190")
schema<- synRemoveColumn(schema, schema@columns[[20]])
newcol<-TableColumn(name="mut_freq_in_cancer_type", columnType = "DOUBLE")
schema<-synAddColumn(schema, newColumn)
schema<-synStore(schema)
queryResult<-synTableQuery("select * from syn8069190")
queryResult@values["mut_freq_in_cancer_type"] <- pancancer.NF1comuts$mut_freq_in_cancer_type
table<-synStore(queryResult)
schema<-synGet("syn8069190")
schema<- synRemoveColumn(schema, schema@columns[[20]])
newcol<-TableColumn(name="mut_freq_in_cancer_type", columnType = "DOUBLE")
schema<-synAddColumn(schema, newcol)
schema<-synStore(schema)
queryResult<-synTableQuery("select * from syn8069190")
schema<-synGet("syn8069190")
schema<- synRemoveColumn(schema, schema@columns[[20]])
newcol<-TableColumn(name="mut_freq_in_cancer_type", columnType = "DOUBLE")
schema<-synAddColumn(schema, newcol)
schema<-synStore(schema)
schema<-synGet("syn8069190")
schema<- synRemoveColumn(schema, schema@columns[[20]])
newcol<-TableColumn(name="mut_freq_in_cancer_type", columnType = "DOUBLE")
schema<-synAddColumn(schema, newcol)
schema<-synStore(schema)
queryResult<-synTableQuery("select * from syn8069190")
queryResult@values["mut_freq_in_cancer_type"] <- pancancer.NF1comuts$mut_freq_in_cancer_type
table<-synStore(queryResult)
files<-list.files('../data/NF2_only_samples')
files<-gsub("NF2only", "", files)
files<-gsub("mutations.txt", "", files)
panCancerMutationBurden<-function(cancerType){
mutations<-read.table(file=paste('../data/mutations_by_cancer/',cancerType,'mutations.txt', sep=""), head=TRUE)
mutn <- mutations[,-1]
mutations$sums<-rowSums(mutn)
mutations$ratios<-(mutations$sums/(ncol(mutations)-1))
mutations$Cancer_Type<-c(rep(cancerType, nrow(mutations)))
mutations$Hugo_Symbol<-mutations$gene
mutations<-dplyr::select(mutations, Cancer_Type, Hugo_Symbol, sums, ratios)
return(mutations)
}
mutationBurden<-lapply(files, function(x){
print(x)
df<-panCancerMutationBurden(x)
})
names(mutationBurden)<-files
readMutationFiles<-function(cancerType){
samples<-read.table(file = paste('../data/NF2_only_samples/NF2only', cancerType, "mutations.txt", sep=""), head = TRUE)
sample.list<-colnames(samples)[-1]
sample.list<-head(sample.list, -1)
sample.list<-gsub("\\.", '-', sample.list)
cancer<-lapply(sample.list, function(i) {
patientmuts.df <- try(fread(file=paste("../data/tcga_mafs/gdac.broadinstitute.org_",cancerType,".Mutation_Packager_Oncotated_Calls.Level_3.2016012800.0.0/",i,".hg19.oncotator.hugo_entrez_remapped.maf.txt", sep=""), header = TRUE), silent = TRUE)
patient.id.col <- rep(i, nrow(patientmuts.df))
try(patientmuts.df$Patient_ID <- patient.id.col)
return(patientmuts.df)
})
cancer.df<-rbindlist(cancer, use.names = TRUE, fill = TRUE)
try(mutation.count<-dplyr::select(samples, gene, sums))
try(names(mutation.count)[names(mutation.count) == "sums"] <- "mutation_count_in_NF2")
try(names(mutation.count)[names(mutation.count) == "gene"] <- "Hugo_Symbol")
numsamps<-length(sample.list)
try(mutation.count$mutation_ratio_in_NF2<-(mutation.count$mutation_count_in_NF2/numsamps))
try(cancer.type.col<-rep(cancerType, nrow(cancer.df)))
try(cancer.df<- merge(x=cancer.df, y=mutation.count, by = "Hugo_Symbol"))
try(cancer.df$Cancer_Type <- cancer.type.col)
try(mutationrates<-mutationBurden[[cancerType]])
try(cancer.df<-merge(x = cancer.df, y = mutationrates, by = "Hugo_Symbol"))
return(cancer.df)
}
cancers<- lapply(files, function(x) {
print(x)
readMutationFiles(x)
})
pancancer.NF2comuts<-rbindlist(cancers, use.names = TRUE, fill = TRUE)
write.table(pancancer.NF2comuts, file="NF2_Co_Mutated_Genes_in_TCGA.txt", sep = "\t")
pancancer.NF2comuts<-dplyr::select(pancancer.NF2comuts, Cancer_Type.x,Patient_ID,Hugo_Symbol,Chromosome,
Start_position,End_position,Strand,Variant_Classification,Reference_Allele,Tumor_Seq_Allele1,
Tumor_Seq_Allele2,dbSNP_RS,cDNA_Change,Codon_Change,Protein_Change,SwissProt_entry_Id,Description,
sums, mutation_count_in_NF2, ratios)
pancancer.NF2comuts<-dplyr::filter(pancancer.NF2comuts, mutation_count_in_NF2>0)
names(pancancer.NF2comuts)[names(pancancer.NF2comuts) == 'sums'] <- "mutations_in_cancer_type"
names(pancancer.NF2comuts)[names(pancancer.NF2comuts) == 'Cancer_Type.x'] <- "Cancer_Type"
names(pancancer.NF2comuts)[names(pancancer.NF2comuts) == 'ratios'] <- "mut_freq_in_cancer_type"
schema<-synGet("syn8069274")
newcol<-TableColumn(name="mut_freq_in_cancer_type", columnType = "DOUBLE")
schema<-synAddColumn(schema, newcol)
schema<-synStore(schema)
queryResult<-synTableQuery("select * from syn8069274")
queryResult@values["mut_freq_in_cancer_type"] <- pancancer.NF2comuts$mut_freq_in_cancer_type
table<-synStore(queryResult)
geniemuts<-synGet("syn7851250")@filePath
library(data.table)
muts<-fread(file=geniemuts, header = TRUE)
muts<-fread(file=geniemuts, header = TRUE, sep = "\t")
muts<-fread(file=geniemuts, header = FALSE, sep = "\t")
muts<-read.table(file=geniemuts, sep = "\t")
View(muts)
muts<-read.table(file=geniemuts, header = TRUE, sep = "\t")
View(muts)
NF1<-filter(muts, Hugo_Symbol == "NF1")
View(NF1)
NF2<-filter(muts, Hugo_Symbol == "NF2")
NF1samps<-NF1$Tumor_Sample_Barcode
NF1samps<-NF1$Tumor_Sample_Barcode
NF2samps<-NF2$Tumor_Sample_Barcode
NF1mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF1samps)
View(NF1mut.samps)
NF1mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF1samps)
NF2mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF2samps)
View(NF2mut.samps)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
View(NF1mut.reduced)
library(synapseClient)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
View(NF2mut.reduced)
clinannot<-synget('syn7851246')@filePath
clinannots<-read.table(file=clinannots, header = TRUE, sep = "\t")
clinannot<-synGet('syn7851246')@filePath
clinannots<-read.table(file=clinannots, header = TRUE, sep = "\t")
clinannots<-read.table(file=clinannot, header = TRUE, sep = "\t")
View(clinannots)
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
View(cancertype)
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
cancertype[cancertype==SAMPLE_ID] <- "Tumor_Sample_Barcode"
cancertype[cancertype=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
View(cancertype)
cancertype[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
View(cancertype)
colnames(cancertype)[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
colnames(cancertype)[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
muts<-left_join(muts, cancertype, by="Tumor_Sample_Barcode")
View(muts)
muts<-read.table(file=geniemuts, header = TRUE, sep = "\t")
clinannots<-read.table(file=clinannot, header = TRUE, sep = "\t")
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
colnames(cancertype)[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
muts<-left_join(muts, cancertype, by="Tumor_Sample_Barcode")
muts<-read.table(file=geniemuts, header = TRUE, sep = "\t")
muts<-full_join(muts, cancertype, by="Tumor_Sample_Barcode")
View(clinannots)
muts<-read.table(file=geniemuts, header = TRUE, sep = "\t")
clinannot<-synGet('syn7851246')@filePath
clinannots<-read.table(file=clinannot, header = TRUE, sep = "\t")
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
colnames(cancertype)[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
NF1mut.clinical<-full_join(NF1mut.reduced, cancertype, by="Tumor_Sample_Barcode")
View(NF2mut.reduced)
View(NF1mut.clinical)
NF2mut.clinical<-full_join(NF2mut.reduced, cancertype, by="Tumor_Sample_Barcode")
View(NF2mut.clinical)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
library(synapseClient)
library(data.table)
library(dplyr)
##get project genie mutation data
geniemuts<-synGet("syn7851250")@filePath
muts<-read.table(file=geniemuts, header = TRUE, sep = "\t")
##get clinical annotations
clinannot<-synGet('syn7851246')@filePath
clinannots<-read.table(file=clinannot, header = TRUE, sep = "\t")
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
colnames(cancertype)[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
##find NF1 and NF2 mutations in dataset
NF1<-filter(muts, Hugo_Symbol == "NF1")
NF2<-filter(muts, Hugo_Symbol == "NF2")
##get tumor sample barcodes from NF1 mutant tumors
NF1samps<-NF1$Tumor_Sample_Barcode
NF2samps<-NF2$Tumor_Sample_Barcode
##filter all project genie data by these barcodes
NF1mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF1samps)
NF2mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF2samps)
##select gene and tumor ID, and reduce observations to account for multiple mutations within one gene in a sample
##to determine mutation frequency
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
count()
mutationcountnf1<-count(NF1mut.reduced$Hugo_Symbol)
mutationcountnf2<-count(NF2mut.reduced$Hugo_Symbol)
mutationcountnf1<-count(NF1mut.reduced, 'Hugo_Symbol')
mutationcountnf2<-count(NF2mut.reduced, 'Hugo_Symbol')
View(mutationcountnf1)
View(mutationcountnf2)
count(NF1mut.reduced, 'Hugo_Symbol')
mutationcountnf1<-count(NF1mut.reduced, Hugo_Symbol)
View(mutationcountnf1)
mutationcountnf2<-count(NF2mut.reduced, Hugo_Symbol)
View(mutationcountnf2)
mutationcountnf1<-count(NF1mut.reduced, Hugo_Symbol)
colnames(mutationcountnf1)[colnames(mutationcountnf1)=='n'] <- "mut_count_in_nf1_mut"
mutationcountnf2<-count(NF2mut.reduced, Hugo_Symbol)
colnames(mutationcountnf2)[colnames(mutationcountnf2)=='n'] <- "mut_count_in_nf2_mut"
NF1mut.reduced<-merge(NF1mut.reduced,mutationcountnf1, by="Hugo_Symbol")
NF2mut.reduced<-merge(NF2mut.reduced,mutationcountnf1, by="Hugo_Symbol")
NF1mut.reduced<-merge(NF1mut.samps,mutationcountnf1, by="Hugo_Symbol")
NF2mut.reduced<-merge(NF1mut.samps,mutationcountnf1, by="Hugo_Symbol")
View(NF1mut.reduced)
NF1mut.reduced<-merge(NF1mut.samps,mutationcountnf1, by="Hugo_Symbol")
View(mutationcountnf1)
colnames(NF1mut.reduced)
NF2mut.reduced<-merge(NF2mut.samps,mutationcountnf1, by="Hugo_Symbol")
muts<-read.table(file=geniemuts, header = TRUE, sep = "\t")
clinannots<-read.table(file=clinannot, header = TRUE, sep = "\t")
cancertype<-select(clinannots, SAMPLE_ID, ONCOTREE_CODE)
colnames(cancertype)[colnames(cancertype)=='SAMPLE_ID'] <- "Tumor_Sample_Barcode"
muts<-merge(muts, cancertype, by="Tumor_Sample_Barcode")
colnames(muts)
View(muts)
muts<-select(muts, ONCOTREE_CODE, Tumor_Sample_Barcode, Hugo_Symbol, Chromosome, Start_Position, End_Position, Strand,
Variant_Classification, Reference_Allele, Tumor_Seq_Allele1, Tumor_Seq_Allele2, dbSNP_RS, HGVSc, HGVSp)
View(muts)
length(unique(muts$Tumor_Sample_Barcode))
unique(muts$Tumor_Sample_Barcode))
unique(muts$Tumor_Sample_Barcode)
length(muts$Tumor_Sample_Barcode)
getMutCount<-function(cancertype) {
foo<-filter(muts, ONCOTREE_CODE==cancertype)
df<-count(foo, Hugo_Symbol)
df$mut_freq_in_cancer_type<-(df$n/length(unique(foo$Tumor_Sample_Barcode)))
return(df)
}
mutationrates<-lapply(unique(muts$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(x)
})
names(mutationrates)<-unique(muts$ONCOTREE_CODE)
NF1mut.reduced$Hugo_Symbol2<-NF1mut.reduced$Hugo_Symbol
NF2mut.reduced$Hugo_Symbol2<-NF2mut.reduced$Hugo_Symbol
View(NF2mut.reduced)
View(NF1mut.reduced)
NF1<-filter(muts, Hugo_Symbol == "NF1")
NF2<-filter(muts, Hugo_Symbol == "NF2")
NF1samps<-NF1$Tumor_Sample_Barcode
NF2samps<-NF2$Tumor_Sample_Barcode
NF1mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF1samps)
NF2mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF2samps)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
mutationcountnf1<-count(NF1mut.reduced, Hugo_Symbol)
colnames(mutationcountnf1)[colnames(mutationcountnf1)=='n'] <- "mut_count_in_nf1_mut"
mutationcountnf2<-count(NF2mut.reduced, Hugo_Symbol)
colnames(mutationcountnf2)[colnames(mutationcountnf2)=='n'] <- "mut_count_in_nf2_mut"
NF1mut.reduced<-merge(NF1mut.samps,mutationcountnf1, by="Hugo_Symbol")
NF1mut.reduced$Hugo_Symbol2<-NF1mut.reduced$Hugo_Symbol
NF2mut.reduced<-merge(NF2mut.samps,mutationcountnf1, by="Hugo_Symbol")
NF2mut.reduced$Hugo_Symbol2<-NF2mut.reduced$Hugo_Symbol
View(mutationcountnf2)
View(NF1mut.reduced)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
mutationcountnf1<-count(NF1mut.reduced, Hugo_Symbol)
colnames(mutationcountnf1)[colnames(mutationcountnf1)=='n'] <- "mut_count_in_nf1_mut"
mutationcountnf2<-count(NF2mut.reduced, Hugo_Symbol)
colnames(mutationcountnf2)[colnames(mutationcountnf2)=='n'] <- "mut_count_in_nf2_mut"
NF1mut.reduced<-merge(NF1mut.samps,mutationcountnf1, by="Hugo_Symbol")
NF1mut.reduced<-merge(NF1mut.samps,mutationcountnf1, by="Hugo_Symbol")
NF2mut.reduced<-merge(NF2mut.samps,mutationcountnf1, by="Hugo_Symbol")
View(NF1mut.reduced)
mutationrates<-rbindlist(mutationrates)
View(mutationrates)
mutationrates<-lapply(unique(muts$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(x)
})
names(mutationrates)
names(mutationrates)<-unique(muts$ONCOTREE_CODE)
names(mutationrates)
for(i in names(mutationrates)){
mutationrates[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates[[i]]))
}
mutationrates<-rbindlist(mutationrates)
View(mutationrates)
NF1mut.final<-merge(NF1mut.reduced, mutationrates, by=c("Hugo_Symbol, ONCOTREE_CODE")
NF1mut.final<-merge(NF1mut.reduced, mutationrates, by=c("Hugo_Symbol, ONCOTREE_CODE"))
NF1mut.final<-merge(NF1mut.reduced, mutationrates, by=c("Hugo_Symbol, ONCOTREE_CODE"))
View(mutationrates)
View(NF1mut.reduced)
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by.x=c("Hugo_Symbol, ONCOTREE_CODE"), by.y=c("Hugo_Symbol, ONCOTREE_CODE"))
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
View(NF1mut.final)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode))
View(NF1mut.reduced)
View(NF1mut.samps)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode, ONCOTREE_CODE))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode, ONCOTREE_CODE))
mutationrates.inNF1<-lapply(unique(NF1mut.reduced$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(x)
})
names(mutationrates.inNF1)<-unique(NF1mut.reduced$ONCOTREE_CODE)
for(i in names(mutationrates.inNF1)){
mutationrates.inNF1[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates.inNF1[[i]]))
}
mutationrates.inNF1<-rbindlist(mutationrates.inNF1)
View(mutationrates.inNF1)
View(mutationrates.inNF1)
getMutCount<-function(mutationframe, cancertype) {
foo<-filter(mutationframe), ONCOTREE_CODE==cancertype)
df<-count(foo, Hugo_Symbol)
df$mut_freq_in_cancer_type<-(df$n/length(unique(foo$Tumor_Sample_Barcode)))
return(df)
}
getMutCount<-function(mutationframe, cancertype) {
foo<-filter(mutationframe, ONCOTREE_CODE==cancertype)
df<-count(foo, Hugo_Symbol)
df$mut_freq_in_cancer_type<-(df$n/length(unique(foo$Tumor_Sample_Barcode)))
return(df)
}
mutationrates<-lapply(unique(muts$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(muts, x)
})
mutationrates.inNF1<-lapply(unique(NF1mut.reduced$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(NF1mut.reduced, x)
})
names(mutationrates.inNF1)<-unique(NF1mut.reduced$ONCOTREE_CODE)
for(i in names(mutationrates.inNF1)){
mutationrates.inNF1[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates.inNF1[[i]]))
}
mutationrates.inNF1<-rbindlist(mutationrates.inNF1)
colnames(mutationrates.inNF1)[colnames(mutationrates.inNF1)=='n'] <- "mut_count_in_nf1_mut"
mutationrates.inNF1<-mutationrates.inNF1[,-3]
mutationrates.inNF2<-lapply(unique(NF2mut.reduced$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(NF2mut.reduced, x)
})
names(mutationrates.inNF2)<-unique(NF2mut.reduced$ONCOTREE_CODE)
for(i in names(mutationrates.inNF2)){
mutationrates.inNF2[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates.inNF2[[i]]))
}
mutationrates.inNF2<-rbindlist(mutationrates.inNF2)
colnames(mutationrates.inNF2)[colnames(mutationrates.inNF2)=='n'] <- "mut_count_in_NF2_mut"
mutationrates.inNF2<-mutationrates.inNF2[,-3]
NF1mut.reduced<-merge(NF1mut.samps,mutationrates.inNF1, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.reduced<-merge(NF2mut.samps,mutationrates.inNF1, by="Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.reduced<-merge(NF2mut.samps,mutationrates.inNF1, by=("Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.reduced<-merge(NF2mut.samps,mutationrates.inNF1, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
for(i in names(mutationrates)){
mutationrates[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates[[i]]))
}
mutationrates<-rbindlist(mutationrates)
View(mutationrates)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode, ONCOTREE_CODE))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode, ONCOTREE_CODE))
getMutCount<-function(mutationframe, cancertype) {
foo<-filter(mutationframe, ONCOTREE_CODE==cancertype)
df<-count(foo, Hugo_Symbol)
df$mut_freq_in_cancer_type<-(df$n/length(unique(foo$Tumor_Sample_Barcode)))
return(df)
}
mutationrates<-lapply(unique(muts$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(muts, x)
})
names(mutationrates)<-unique(muts$ONCOTREE_CODE)
for(i in names(mutationrates)){
mutationrates[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates[[i]]))
}
mutationrates<-rbindlist(mutationrates)
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.final<-merge(x=NF2mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
View(NF2mut.final)
View(NF1mut.final)
NF1mut.reduced<-merge(NF1mut.samps,mutationrates.inNF1, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.reduced<-merge(NF2mut.samps,mutationrates.inNF1, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
View(NF1mut.reduced)
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.final<-merge(x=NF2mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
View(NF2mut.final)
View(NF1mut.final)
colnames(NF1mut.final)[colnames(NF1mut.final)=='n'] <- "mut_count_in_cancer_type"
colnames(NF2mut.final)[colnames(NF2mut.final)=='n'] <- "mut_count_in_cancer_type"
View(NF2mut.final)
View(NF1mut.final)
getMutCount<-function(mutationframe, cancertype) {
foo<-filter(mutationframe, ONCOTREE_CODE==cancertype)
foo<-select(foo, ONCOTREE_CODE, Tumor_Sample_Barcode, Hugo_Symbol)
foo<-distinct(foo)
df<-count(foo, Hugo_Symbol)
df$mut_freq_in_cancer_type<-(df$n/length(unique(foo$Tumor_Sample_Barcode)))
return(df)
}
mutationrates<-lapply(unique(muts$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(muts, x)
})
names(mutationrates)<-unique(muts$ONCOTREE_CODE)
for(i in names(mutationrates)){
mutationrates[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates[[i]]))
}
mutationrates<-rbindlist(mutationrates)
NF1<-filter(muts, Hugo_Symbol == "NF1")
NF2<-filter(muts, Hugo_Symbol == "NF2")
NF1samps<-NF1$Tumor_Sample_Barcode
NF2samps<-NF2$Tumor_Sample_Barcode
NF1mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF1samps)
NF2mut.samps<-filter(muts, Tumor_Sample_Barcode %in% NF2samps)
NF1mut.reduced<-distinct(select(NF1mut.samps, Hugo_Symbol, Tumor_Sample_Barcode, ONCOTREE_CODE))
NF2mut.reduced<-distinct(select(NF2mut.samps, Hugo_Symbol, Tumor_Sample_Barcode, ONCOTREE_CODE))
mutationrates.inNF1<-lapply(unique(NF1mut.reduced$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(NF1mut.reduced, x)
})
names(mutationrates.inNF1)<-unique(NF1mut.reduced$ONCOTREE_CODE)
for(i in names(mutationrates.inNF1)){
mutationrates.inNF1[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates.inNF1[[i]]))
}
mutationrates.inNF1<-rbindlist(mutationrates.inNF1)
colnames(mutationrates.inNF1)[colnames(mutationrates.inNF1)=='n'] <- "mut_count_in_nf1_mut"
mutationrates.inNF1<-mutationrates.inNF1[,-3]
mutationrates.inNF2<-lapply(unique(NF2mut.reduced$ONCOTREE_CODE), function(x) {
print(x)
getMutCount(NF2mut.reduced, x)
})
names(mutationrates.inNF2)<-unique(NF2mut.reduced$ONCOTREE_CODE)
for(i in names(mutationrates.inNF2)){
mutationrates.inNF2[[i]]$ONCOTREE_CODE<-rep(i, nrow(mutationrates.inNF2[[i]]))
}
mutationrates.inNF2<-rbindlist(mutationrates.inNF2)
colnames(mutationrates.inNF2)[colnames(mutationrates.inNF2)=='n'] <- "mut_count_in_NF2_mut"
mutationrates.inNF2<-mutationrates.inNF2[,-3]
NF1mut.reduced<-merge(NF1mut.samps,mutationrates.inNF1, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF2mut.reduced<-merge(NF2mut.samps,mutationrates.inNF1, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
colnames(NF1mut.final)[colnames(NF1mut.final)=='n'] <- "mut_count_in_cancer_type"
NF2mut.final<-merge(x=NF2mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
colnames(NF2mut.final)[colnames(NF2mut.final)=='n'] <- "mut_count_in_cancer_type"
View(NF1mut.final)
View(NF2mut.final)
makeTable <- function(df,tableName,projectId){
library(synapseClient)
synapseLogin()
tcresult<-as.tableColumns(df)
cols<-tcresult$tableColumns
getType = sapply(cols,function(x) return(x@columnType))
fileHandleId<-tcresult$fileHandleId
project<- synGet(projectId)
schema<-TableSchema(name=tableName, parent=project, columns=cols)
table<-Table(schema, fileHandleId)
table<-synStore(table, retrieveData=TRUE)
}
makeTable(NF1mut.final, "NF1 Co-mutated Genes in Genie", "syn7154892")
makeTable(NF2mut.final, "NF2 Co-mutated Genes in Genie", "syn7154892")
View(NF1mut.final)
?Position()
Position(x>349525, NF1mut.final)
Position(349525, NF1mut.final)
print(NF1mut.final$dbSNP_RS)
NF1mut.final<-NF1mut.final[,-12]
makeTable(NF1mut.final, "NF1 Co-mutated Genes in Genie", "syn7154892")
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
colnames(NF1mut.final)[colnames(NF1mut.final)=='n'] <- "mut_count_in_cancer_type"
colnames(NF1mut.final)[colnames(NF1mut.final)=='n'] <- "mut_count_in_cancer_type"
View(NF1mut.final)
project <- synGet('syn7154892')
tcresult <- as.tableColumns(NF1mut.final)
cols <- tcresult$tableColumns
print(NF1mut.final$HGVSc)
NF1mut.final<-NF1mut.final[,-13]
makeTable(NF1mut.final, "NF1 Co-mutated Genes in Genie", "syn7154892")
NF1mut.final<-NF1mut.final[,-13]
NF1mut.final<-sub('^{10000}.', '', NF1mut.final)
NF1mut.final<-sub('.{10000}^', '', NF1mut.final)
NF1mut.final<-sub('.{1000}^', '', NF1mut.final)
NF1mut.final<-sub('.{,1000}^', '', NF1mut.final)
NF1mut.final<-sub('^.{1000}', '', NF1mut.final)
NF1mut.final<-sub('^.{1}', '', NF1mut.final)
NF1mut.final<-sub('^.{999}', '', NF1mut.final)
NF1mut.final<-sub('^.{99}', '', NF1mut.final)
NF1mut.final<-sub('^.{499}', '', NF1mut.final)
View(NF1mut.samps)
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
colnames(NF1mut.final)[colnames(NF1mut.final)=='n'] <- "mut_count_in_cancer_type"
sub('^.{99}', '', NF1mut.final)
NF1mut.final.trim<-strtrim(NF1mut.final, 1000)
NF1mut.final<-merge(x=NF1mut.reduced, y=mutationrates, by=c("Hugo_Symbol", "ONCOTREE_CODE"))
colnames(NF1mut.final)[colnames(NF1mut.final)=='n'] <- "mut_count_in_cancer_type"
NF1mut.final.trim<-apply(NF1mut.final, 1:2, strtrim(x, 1000))
NF1mut.final.trim<-apply(NF1mut.final, 1:2, function(x) strtrim(x, 1000))
View(NF1mut.final.trim)
8120*17
makeTable(NF1mut.final.trim, "NF1 Co-mutated Genes in Genie", "syn7154892")
NF1mut.final.trim<-as.data.frame(NF1mut.final.trim)
makeTable(NF1mut.final.trim, "NF1 Co-mutated Genes in Genie", "syn7154892")
