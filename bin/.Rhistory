#dat<-select(dat, gene, sums)
#ggplot(data = dat, aes(x=gene, y=sums))
print(dat)
}
for(BRCA in comuts3){
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
#dat<-select(dat, gene, sums)
#ggplot(data = dat, aes(x=gene, y=sums))
print(dat)
}
for(BRCA){
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
#dat<-select(dat, gene, sums)
#ggplot(data = dat, aes(x=gene, y=sums))
print(dat)
}
bar<-filter(comuts3$BRCA, BH <= 0.05)
View(bar)
list<-bar$gene
for(BRCA){
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, list %in% gene)
dat<-select(dat, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
#dat<-select(dat, gene, sums)
#ggplot(data = dat, aes(x=gene, y=sums))
print(dat)
}
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, list %in% gene)
dat<-filter(mutations$BRCA, gene$list)
View(dat)
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, gene$list)
dat<-filter(mutations$BRCA, gene %in% list)
View(dat)
dat<-select(dat, one_of(mutpts))
mutpts<-dlply(patients, .id = cancer)
mutpts<-dlply(patients, .variables = cancer)
mutpts<-dlply(patients, .variables = "cancer")
View(patients[[ACC]])
dat<-select(dat, one_of(mutpts))
View(dat)
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, gene, one_of(mutpts), sums)
patients<-read.table("TCGA_NF1_patient_status.txt")
patients<-filter(patients, mutation==1)
mutpts<-as.character(patients$samples)
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, gene, one_of(mutpts), sums)
dat$sums<-rowSums(dat[,-1])
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, gene, one_of(mutpts)
dat$sums<-rowSums(dat[,-1])
#dat<-select(dat, gene, sums)
#ggplot(data = dat, aes(x=gene, y=sums))
print(dat)
}
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, gene, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
print(dat)
bar<-filter(comuts3$BRCA, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, gene, one_of(mutpts))
dat<-filter(mutations$BRCA, gene %in% list)
dat<-select(dat, gene, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
View(dat)
comuts3$BRC
View(comuts3$BRCA)
nf1<-dplyr::filter(mutations[["ACC"]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
if(nrow(nf1)>0){
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
bar<-filter(mutations[[i]], gene == `j`)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
})
)
cancer.type<-sub("mutations.txt", "", mutation.files[["ACC"]])
nf1<-dplyr::filter(mutations[[1]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
cancer.type<-sub("mutations.txt", "", mutation.files[[1]])
print(cancer.type)
bar<-filter(mutations[[1]], gene == `j`)
bar<-filter(mutations[[1]], gene == `CERS1`)
bar<-filter(mutations[[1]], gene == "CERS1")
bar2<-filter(mutations[[1]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
j="CERS1"
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
View(bar3)
bar<-filter(mutations[[1]], gene == "CERS1")
bar2<-filter(mutations[[1]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
View(bar3)
ptswNF1only<-filter(bar3, NF1==1)
bar<-filter(mutations[[1]], gene == `j`)
bar2<-filter(mutations[[1]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
View(bar3)
colnames(bar3) <- bar3[1,]
View(bar3)
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
View(bar3)
bar3 <- as.data.frame(bar3)
bar3 <- bar3[-1,]
View(bar)
bar<-filter(mutations[[1]], gene == `j`)
foo<-lapply(mutations[[3]]$gene, function(j) {
bar<-filter(mutations[[3]], gene == `j`)
if(nrow(bar)==0) {
return
}
bar2<-filter(mutations[[1]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3)
bar3 <- bar3[-1,]
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
})
bar<-filter(mutations[[3]], gene == `j`)
bar2<-filter(mutations[[3]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
View(bar3)
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3)
bar3 <- bar3[-1,]
View(bar3)
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
mutations[[3]]$sums<-rowSums(mutations[[3]][,-1])
nf1<-dplyr::filter(mutations[[3]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
if(nrow(nf1)>0){
cancer.type<-sub("mutations.txt", "", mutation.files[[3]])
print(cancer.type)
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
bar<-filter(mutations[[i]], gene == `j`)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
})
#comuts<-unname(comuts)
names(foo) <- mutations[[i]]$gene
return(foo)
} else {
foo <- "no NF1 mutations"
return (foo)
}
cancer.type<-sub("mutations.txt", "", mutation.files[[3]])
print(cancer.type)
mutations[[3]]$sums<-rowSums(mutations[[3]][,-1])
bar<-filter(mutations[[3]], gene == `j`)
bar2<-filter(mutations[[3]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
j = "NF1"
nf1<-dplyr::filter(mutations[[3]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
if(nrow(nf1)>0){
cancer.type<-sub("mutations.txt", "", mutation.files[[3]])
print(cancer.type)
##hypergeometric test for each gene
foo<-lapply(mutations[[i]]$gene, function(j) {
bar<-filter(mutations[[3]], gene == `j`)
bar2<-filter(mutations[[3]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
bar<-c(f$p.value, f$estimate)
bar<-unname(bar)
})
#comuts<-unname(comuts)
names(foo) <- mutations[[i]]$gene
return(foo)
} else {
foo <- "no NF1 mutations"
return (foo)
}
bar<-filter(mutations[[3]], gene == `j`)
bar2<-filter(mutations[[3]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
bar<-c(f$p.value, f$estimate)
bar<-unname(bar)
names(foo) <- mutations[[i]]$gene
nf1<-dplyr::filter(mutations[[3]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
comuts<-lapply(3, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
if(nrow(nf1)>0){
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-sapply(mutations[[i]]$gene, function(j) {
bar<-filter(mutations[[i]], gene == `j`)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
}, simplify = FALSE, USE.NAMES = TRUE)
#comuts<-unname(comuts)
names(foo) <- mutations[[i]]$gene
return(foo)
} else {
foo <- "no NF1 mutations"
return (foo)
}
})
comuts<-lapply(17, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
if(nrow(nf1)>0){
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-sapply(mutations[[i]]$gene, function(j) {
bar<-filter(mutations[[i]], gene == `j`)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
}, simplify = FALSE, USE.NAMES = TRUE)
#comuts<-unname(comuts)
names(foo) <- mutations[[i]]$gene
return(foo)
} else {
foo <- "no NF1 mutations"
return (foo)
}
})
comuts2<-lapply(comuts, function(k) ldply(k))
patients<-read.table("TCGA_NF1_patient_status.txt")
patients<-filter(patients, mutation==1)
mutpts<-as.character(patients$samples)
bar<-filter(comuts3$LAML, BH <= 0.05)
list<-bar$gene
dat<-filter(mutations$LAML, gene %in% list)
dat<-select(dat, gene, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
print(dat)
bar<-filter(comuts3$LAML, BH <= 0.05)
comuts<-lapply(1, function(i){
##get samples with NF1 mutation
nf1<-dplyr::filter(mutations[[i]], gene=="NF1")
nf1<-nf1[,-1]
nf1<-as.data.frame(t(nf1))
nf1$samples<-rownames(nf1)
nf1<-dplyr::filter(nf1, nf1[,1]==1)
if(nrow(nf1)>0){
cancer.type<-sub("mutations.txt", "", mutation.files[[i]])
print(cancer.type)
##get all mutation sums
mutations[[i]]$sums<-rowSums(mutations[[i]][,-1])
##hypergeometric test for each gene
foo<-sapply(mutations[[i]]$gene, function(j) {
bar<-filter(mutations[[i]], gene == `j`)
bar2<-filter(mutations[[i]], gene == "NF1")
bar3<-t(rbind(bar, bar2))
colnames(bar3) <- bar3[1,]
bar3 <- as.data.frame(bar3[-1,])
if(j=="NF1"){
j="NF1.test"
colnames(bar3)<-c("NF1", "NF1.test")
}
ptswNF1only<-filter(bar3, NF1==1)
ptswNF1only<-nrow(filter_(ptswNF1only, paste("`",j,"`","==0", sep="")))
ptswGonly<-filter(bar3, NF1==0)
ptswGonly<-nrow(filter_(ptswGonly, paste("`",j,"`","==1", sep="")))
ptswGandNF1<-filter(bar3, NF1==1)
ptswGandNF1<-nrow(filter_(ptswGandNF1, paste("`",j,"`","==1", sep="")))
nomut<-filter(bar3, NF1==0)
nomut<-nrow(filter_(nomut, paste("`",j,"`","==0", sep="")))
bar<-c(-1,-1)
f<-fisher.test(matrix(c(ptswGandNF1,ptswNF1only,ptswGonly,nomut), ncol = 2))
try(bar<-c(f$p.value, f$estimate))
bar<-unname(bar)
}, simplify = FALSE, USE.NAMES = TRUE)
#comuts<-unname(comuts)
names(foo) <- mutations[[i]]$gene
return(foo)
} else {
foo <- "no NF1 mutations"
return (foo)
}
})
View(pancan)
comuts2<-lapply(comuts, function(k) ldply(k))
comuts3<-lapply(comuts2, function(m){
# if(nrow(comuts2$m)>1){
bar<-m
colnames(bar) <- c("gene","p_value","estimate")
bar$BH<-p.adjust(bar[,2], method = "BH")
return(bar)
#} else {
#  bar <- "no nf1 mutations"
#  return(bar)
#}
})
bar<-filter(comuts3$ACC, BH <= 0.05)
bar<-filter(comuts3[[1]], BH <= 0.05)
View(bar)
list<-bar$gene
dat<-filter(mutations[[1]], gene %in% list)
dat<-select(dat, gene, one_of(mutpts))
dat$sums<-rowSums(dat[,-1])
print(dat)
library(parallel)
print(detectCores())
