p1 <- p1 + coord_cartesian(ylim = c(0, 125))
p1 <- p1 + colScale
p1
ggsave(filename = "SYN_drug_response_2Dplot.pdf",width = 6, height = 4)
# Mouse
MS_normViab <- UCF_normViab[grep('^MS', UCF_normViab$cellLine),]
MS_normViab <- MS_normViab[MS_normViab$drug %in% drugs,]
MS_doseResp <- doseResp[grep('^MS', doseResp$cellLine),]
MS_doseResp <- MS_doseResp[MS_doseResp$drug %in% drugs,]
MS_doseResp <- MS_doseResp[order(MS_doseResp$IC50),]
p3 <- ggplot(MS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p3 <- p3 + geom_point(aes_string(color="cellLine"))
p3 <- p3 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p3 <- p3 + geom_line(data = MS_doseResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p3 <- p3 + facet_grid(experiment ~ drug) + theme_bw(base_size = 15)
p3 <- p3 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p3 <- p3 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p3 <- p3 + coord_cartesian(ylim = c(0, 125))
p3 <- p3 + colScaleMouse
p3
ggsave(filename = "MS_drug_response_2Dplot.pdf",width = 6, height = 4)
# Mouse
MS_normViab <- UCF_normViab[grep('^MS', UCF_normViab$cellLine),]
MS_normViab <- MS_normViab[MS_normViab$drug %in% drugs,]
MS_doseResp <- doseResp[grep('^MS', doseResp$cellLine),]
MS_doseResp <- MS_doseResp[MS_doseResp$drug %in% drugs,]
MS_doseResp <- MS_doseResp[order(MS_doseResp$IC50),]
p3 <- ggplot(MS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p3 <- p3 + geom_point(aes_string(color="cellLine"))
p3 <- p3 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p3 <- p3 + geom_line(data = MS_doseResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p3 <- p3 + facet_grid(experiment ~ drug) + theme_bw(base_size = 15)
p3 <- p3 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p3 <- p3 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p3 <- p3 + coord_cartesian(ylim = c(0, 125))
p3 <- p3 + colScaleMouse
p3
ggsave(filename = "MS_drug_response_2Dplot.pdf",width = 6, height = 4)
HS_doseResp_r <- doseResp_r[doseResp_r$cellLine %in% c("HS01","HS11") & doseResp_r$drug %in% drugs,]
HS_doseResp_r <- HS_doseResp_r[order(HS_doseResp_r$IC50),]
HS_doseResp_r$grp <- paste(HS_doseResp_r$cellLine,HS_doseResp_r$replicate)
p2 <- ggplot(HS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p2 <- p2 + geom_point(aes_string(color="cellLine"))
p2 <- p2 + geom_line(data = HS_doseResp_r, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = grp))
p2 <- p2 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p2 <- p2 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p2 <- p2 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p2 <- p2 + coord_cartesian(ylim = c(0, 125))
p2 <- p2 + colScaleHuman
p2
ggsave(filename = "HS_rep_drug_response_2Dplot.pdf",width = 8, height = 4)
HS_doseResp_r <- doseResp_r[doseResp_r$cellLine %in% c("HS01","HS11") & doseResp_r$drug %in% drugs,]
HS_doseResp_r <- HS_doseResp_r[order(HS_doseResp_r$IC50),]
HS_doseResp_r$grp <- paste(HS_doseResp_r$cellLine,HS_doseResp_r$replicate)
p2 <- ggplot(HS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p2 <- p2 + geom_point(aes_string(color="cellLine"))
p2 <- p2 + geom_line(data = HS_doseResp_r, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = grp))
p2 <- p2 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p2 <- p2 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p2 <- p2 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p2 <- p2 + coord_cartesian(ylim = c(0, 125))
p2 <- p2 + colScaleHuman
p2
ggsave(filename = "HS_rep_drug_response_2Dplot.pdf",width = 8, height = 4)
# Human
HS_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11") & UCF_normViab$drug %in% drugs,]
HS_doseResp <- doseResp[doseResp$cellLine %in% c("HS01","HS11") & doseResp$drug %in% drugs,]
HS_doseResp <- HS_doseResp[order(HS_doseResp$IC50),]
labelVal <- as.integer(c(min(log10(HS_normViab$conc*(1e+6))), median(log10(HS_normViab$conc*(1e+6))), max(log10(HS_normViab$conc*(1e+6)))))
p1 <- ggplot(HS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p1 <- p1 + geom_point(aes_string(color="cellLine"))
p1 <- p1 + geom_line(data = HS_doseResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p1 <- p1 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p1 <- p1 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p1 <- p1 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p1 <- p1 + coord_cartesian(ylim = c(0, 125))
p1 <- p1 + colScaleHuman
p1
ggsave(filename = "HS_drug_response_2Dplot.pdf",width = 8, height = 4)
###old code to pull from for report
# set 1: HS01, HS11
comp_1_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11"),]
comp_1_drugResp <- doseResp[doseResp$cellLine %in% c("HS01","HS11"),]
p5 <- ggplot(comp_1_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p5 <- p5 + geom_point(aes_string(color="cellLine"),size=0.5)
p5 <- p5 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p5 <- p5 + geom_line(data = comp_1_drugResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p5 <- p5 + facet_wrap(~ drug, ncol = 4) + theme_bw(base_size = 14) + theme(legend.position=c(0.85,0.08))
p5 <- p5 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p5 <- p5 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p5 <- p5 + colScaleHuman
p5
ggsave(filename = "compare1_drug_response_2Dplot.pdf",width = 6, height = 12)
###old code to pull from for report
# set 1: HS01, HS11
comp_1_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11"),]
comp_1_drugResp <- doseResp[doseResp$cellLine %in% c("HS01","HS11"),]
p5 <- ggplot(comp_1_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p5 <- p5 + geom_point(aes_string(color="cellLine"),size=0.5)
p5 <- p5 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p5 <- p5 + geom_line(data = comp_1_drugResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p5 <- p5 + facet_wrap(~ drug, ncol = 4) + theme_bw(base_size = 14) + theme(legend.position=c(0.85,0.08))
p5 <- p5 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p5 <- p5 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p5 <- p5 + colScaleHuman
p5
ggsave(filename = "compare1_drug_response_2Dplot.pdf",width = 6, height = 12)
comp_1_normViab <- MGH_normViab[MGH_normViab$cellLine %in% c("Syn1","Syn5", "Syn6"),]
comp_1_drugResp <- doseResp[doseResp$cellLine %in% c("Syn1","Syn5", "Syn6"),]
p5 <- ggplot(comp_1_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p5 <- p5 + geom_point(aes_string(color="cellLine"),size=0.5)
p5 <- p5 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p5 <- p5 + geom_line(data = comp_1_drugResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p5 <- p5 + facet_wrap(~ drug, ncol = 5) + theme_bw(base_size = 14) + theme(legend.position=c(0.5,0.15))
p5 <- p5 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p5 <- p5 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p5 <- p5 + coord_cartesian(ylim = c(0, 125))
p5 <- p5 + colScale
p5
ggsave(filename = "SYN_compare1_drug_response_2Dplot.pdf",width = 8, height = 8)
comp_1_normViab <- MGH_normViab[MGH_normViab$cellLine %in% c("Syn1","Syn5", "Syn6"),]
comp_1_drugResp <- doseResp[doseResp$cellLine %in% c("Syn1","Syn5", "Syn6"),]
p5 <- ggplot(comp_1_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p5 <- p5 + geom_point(aes_string(color="cellLine"),size=0.5)
p5 <- p5 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p5 <- p5 + geom_line(data = comp_1_drugResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p5 <- p5 + facet_wrap(~ drug, ncol = 5) + theme_bw(base_size = 14) + theme(legend.position=c(0.5,0.15))
p5 <- p5 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p5 <- p5 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p5 <- p5 + coord_cartesian(ylim = c(0, 125))
p5 <- p5 + colScale
p5
ggsave(filename = "SYN_compare1_drug_response_2Dplot.pdf",width = 8, height = 8)
comp_1_normViab <- MGH_normViab[MGH_normViab$cellLine %in% c("Syn1","Syn5", "Syn6"),]
comp_1_drugResp <- doseResp[doseResp$cellLine %in% c("Syn1","Syn5", "Syn6"),]
p5 <- ggplot(comp_1_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p5 <- p5 + geom_point(aes_string(color="cellLine"),size=0.5)
p5 <- p5 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p5 <- p5 + geom_line(data = comp_1_drugResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p5 <- p5 + facet_wrap(~ drug, ncol = 5) + theme_bw(base_size = 14) + theme(legend.position=c(0.5,0.15))
p5 <- p5 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p5 <- p5 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p5 <- p5 + coord_cartesian(ylim = c(0, 125))
p5 <- p5 + colScale
p5
ggsave(filename = "SYN_compare1_drug_response_2Dplot.pdf",width = 10, height = 8)
comp_1_normViab <- MGH_normViab[MGH_normViab$cellLine %in% c("Syn1","Syn5", "Syn6"),]
comp_1_drugResp <- doseResp[doseResp$cellLine %in% c("Syn1","Syn5", "Syn6"),]
p5 <- ggplot(comp_1_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p5 <- p5 + geom_point(aes_string(color="cellLine"),size=0.5)
p5 <- p5 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p5 <- p5 + geom_line(data = comp_1_drugResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p5 <- p5 + facet_wrap(~ drug, ncol = 5) + theme_bw(base_size = 14) + theme(legend.position=c(0.5,0.15))
p5 <- p5 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p5 <- p5 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p5 <- p5 + coord_cartesian(ylim = c(0, 125))
p5 <- p5 + colScale
p5
ggsave(filename = "SYN_compare1_drug_response_2Dplot.pdf",width = 10, height = 8)
library(synapseClient)
library(reshape2)
library(plyr)
library(dplyr)
library(biomaRt)
library(mHG)
library(parallel)
synapseLogin()
degs<-read.table(synGet("syn5734003")@filePath, sep = ",", header = TRUE)
degs2<-colsplit(degs$target_id, "\\|", c(1,2,3,4,5,"gene",7,8))
degs$gene<-degs2$gene
sigs<-filter(degs, pval<=0.001 & b >= 0)
## pull drug data and filter for human targets, and eliminate drugs with
## 0 quantitative effects measured
drugdat <- synTableQuery("SELECT * FROM syn7341038")
drugdat <- as.data.frame(drugdat@values)
drugdat.filtered <- filter(drugdat, Organism == "Homo sapiens")
drugdat.filtered <- filter(drugdat.filtered, N_quantitative != 0)
## obtain data to map Uniprot id with Hugo Genes
mart <- useMart("ENSEMBL_MART_ENSEMBL", "hsapiens_gene_ensembl")
bm <-
getBM(attributes = c("hgnc_symbol", "uniprot_swissprot"),
mart = mart)
bm <- filter(bm, uniprot_swissprot != "")
colnames(bm) <- c("Hugo_Gene", "Uniprot_accession_numbers")
## map uniprot targets to hugo genes - generate list of dataframes, each
## data frame lists targets of drug
drugdat.filtered$Uniprot_accession_numbers <-
sub(",.", "", drugdat.filtered$Uniprot_accession_numbers)
drugdat.filtered <-
left_join(drugdat.filtered, bm, by = "Uniprot_accession_numbers")
listofdrugtargets <-
dlply(.data = drugdat.filtered, .variables = "Structure_ID")
## some uniprot ids do not successfully map to hugo genes, note them
## here, these will not show up in analysis
unannotated <-
filter(drugdat.filtered, is.na(drugdat.filtered$Hugo_Gene))
## pull evotec data to map compound names to structure IDs
compound.data <- synTableQuery("SELECT * FROM syn8118065")
compound.data <- as.data.frame(compound.data@values)
compound.data <-
compound.data[!duplicated(compound.data$Structure_ID),]
## make more stringent version of above drug data (increased evidence
## for hitting target, more potency towards target) forget everything
## requiring more than 50uM drug to have an effect, would be very
## challenging to deliver that concentration of drug to target in tumor
drugdat.stringent <- filter(drugdat.filtered, N_quantitative > 1)
drugdat.stringent <-
filter(drugdat.filtered, MinActivity_nM < 50000)
listofdrugtargets.stri <-
dlply(.data = drugdat.stringent, .variables = "Structure_ID")
print(detectCores())
## core function to test for enriched drug targets (hypergeometric test)
TestForDrugTargets <- function(comut) {
allcomuts <- unique(comut)
hyper <- mclapply(listofdrugtargets.stri, function(x) {
N <- length(allcomuts)
B <- nrow(x$Hugo_Gene)
lambdas <- as.integer((allcomuts %in% x$Hugo_Gene))
mHG <- mHG.test(lambdas)$p.value
}, mc.cores=detectCores())
Structure_ID <- names(listofdrugtargets.stri)
hypergeo_pval <- t(bind_rows(hyper))
hyper.df <- as.data.frame(cbind(Structure_ID, hypergeo_pval))
names(hyper.df) <- c("Structure_ID", "Hypergeo_pval")
compound.data$Structure_ID <-
as.character(compound.data$Structure_ID)
hyper.annot <-
left_join(hyper.df, compound.data, by = "Structure_ID")
}
testgenes<-unique(sigs$gene)
hyper<-TestForDrugTargets(testgenes)
View(hyper)
setwd("~/Documents/NF1_scripts/analysis/2017-02-23")
write.table(hyper, "pNF_DEG_enriched_drugs.txt", sep = "\t")
synStore(File("pNF_DEG_enriched_drugs.txt", parentId = "syn8331051"), used = c("syn5734003", "syn7341038", "syn8118065"), executed = "https://raw.githubusercontent.com/allaway/NF1_scripts/master/analysis/2017-02-23/pNFDEgenesDrugEnrichment.R")
synStore(File("pNF_DEG_enriched_drugs.txt", parentId = "syn8292685"), used = c("syn5734003", "syn7341038", "syn8118065"), executed = "https://raw.githubusercontent.com/allaway/NF1_scripts/master/analysis/2017-02-23/pNFDEgenesDrugEnrichment.R")
View(hyper)
View(hyper)
temp <- select(hyper, Structure_ID, Hypergeo_pval, Supplier_Data_2)
temp <-  dplyr::select(hyper, Structure_ID, Hypergeo_pval, Supplier_Data_2)
View(temp)
foo<-distinct(filter(select(SYN_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("Syn1", "Syn5", "Syn6")))
foo<-distinct(filter(dplyr::select(SYN_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("Syn1", "Syn5", "Syn6")))
doseResp_r$IC50_nM <- (doseResp_r$IC50)*1000000000
foo<-distinct(filter(dplyr::select(SYN_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("Syn1", "Syn5", "Syn6")))
library("synapseClient")
library("nplr")
library("plyr")
library("dplyr")
library("data.table")
library("plotly")
library("reshape2")
library("ggplot2")
library("foreach")
library('pander')
synapseLogin()
get_drugResponse_stats <- function(conc,viability,...){
res <- nplr(conc, viability,...)
results <- getAUC(res)
results['goodNess_of_fit'] <- getGoodness(res)[1]
results['stdErr'] <- getStdErr(res)[1]
ICx_est = getEstimates(res, targets= c(.10,.20,.30,.40,.50,.60,.70,.80,.90))
results['IC10'] = ICx_est[1,'x']
results['IC20'] = ICx_est[2,'x']
results['IC30'] = ICx_est[3,'x']
results['IC40'] = ICx_est[4,'x']
results['IC50'] = ICx_est[5,'x']
results['IC60'] = ICx_est[6,'x']
results['IC70'] = ICx_est[7,'x']
results['IC80'] = ICx_est[8,'x']
results['IC90'] = ICx_est[9,'x']
results['maxEfficacy'] = max(getYcurve(res)) #get the maximum efficacy of the drug
results['bottom_asymptote'] = res@pars['bottom']
results['top_asymptote'] = res@pars['top']
results['hillSlope'] =  res@pars['scal']
fittedVals <- data.frame(fittedX = getXcurve(res),
fittedY = getYcurve(res))
results <- cbind(results,fittedVals)
results
}
tmp_iterator <- function(df){
tryCatch({
stats <- get_drugResponse_stats(df$conc, df$normViability, useLog=T)
},error=function(e){
print(dim(df))
print(df$conc)
print(df$normViability)
print(unique(df$cellLine))
print(unique(df$drug))
print(unique(df$experiment))
print(e)
stop('stopped')
})
}
MGH_normViab <- 'syn2773792'
MGH_normViab <- synGet(MGH_normViab)
MGH_normViab <- read.delim(MGH_normViab@filePath, check.names=F, sep="\t", header=T,stringsAsFactors = FALSE)
#drop unnecassary cols
drop_cols <- c('plate', 'medianDMSO', 'viability')
MGH_normViab <- MGH_normViab[, !colnames(MGH_normViab) %in% drop_cols]
# Drug response
doseResp <- ddply(.data=MGH_normViab, .variables = c('drug', 'cellLine', 'experiment'),
.fun = tmp_iterator, .parallel = T)
doseResp_r <- ddply(.data=MGH_normViab, .variables = c('drug', 'cellLine', 'experiment','replicate'),
.fun = tmp_iterator, .parallel = T)
doseResp_new <- ddply(.data=MGH_normViab, .variables = c('drug', 'cellLine'),
.fun = tmp_iterator, .parallel = T)
doseResp_r$IC50_nM <- (doseResp_r$IC50)*1000000000
drugs <- c("CUDC907","GSK2126458","Panobinostat")
###########
myColors <- c("#384DEA", "#BF2B2B", "#EC91D8")
names(myColors) <- c("Syn1", "Syn5", "Syn6")
colScale <- scale_color_manual(name = "grp",values = myColors)
foo<-distinct(filter(dplyr::select(SYN_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("Syn1", "Syn5", "Syn6")))
doseResp_r$IC50_nM <- (doseResp_r$IC50)*1000000000
SYN_doseResp_r <- doseResp_r[doseResp_r$cellLine %in% c("Syn1","Syn5", "Syn6") & doseResp_r$drug %in% drugs,]
SYN_doseResp_r <- SYN_doseResp_r[order(SYN_doseResp_r$IC50),]
SYN_doseResp_r$grp <- paste(SYN_doseResp_r$cellLine,SYN_doseResp_r$replicate)
p2 <- ggplot(SYN_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p2 <- p2 + geom_point(aes_string(color="cellLine"))
p2 <- p2 + scale_color_brewer(type = "qual", palette = 2, direction = 1)
p2 <- p2 + geom_line(data = SYN_doseResp_r, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = grp))
p2 <- p2 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p2 <- p2 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p2 <- p2 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p2 <- p2 + scale_x_continuous(breaks = labelVal, labels = sapply(labelVal, function(x) format(10^x,scientific = T)))
p2 <- p2 + coord_cartesian(ylim = c(0, 125))
p2 <- p2 + colScale
p2
ggsave(filename = "SYN_rep_drug_response_2Dplot.pdf",width = 8, height = 3)
SYN_doseResp$IC50_nM <- SYN_doseResp$IC50*1000000000
foo<-distinct(filter(dplyr::select(SYN_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("Syn1", "Syn5", "Syn6")))
colnames(foo)<-c("Drug", "Cell Line", "IC50 (nM)", "Simpson AUC")
pander(foo)
knitr::opts_chunk$set(echo = FALSE)
library("synapseClient")
library("nplr")
library("plyr")
library("dplyr")
library("data.table")
library("plotly")
library("reshape2")
library("ggplot2")
library("foreach")
library("pander")
synapseLogin()
get_drugResponse_stats <- function(conc,viability,...){
res <- nplr(conc, viability,...)
results <- getAUC(res)
results['goodNess_of_fit'] <- getGoodness(res)[1]
results['stdErr'] <- getStdErr(res)[1]
ICx_est = getEstimates(res, targets= c(.10,.20,.30,.40,.50,.60,.70,.80,.90))
results['IC10'] = ICx_est[1,'x']
results['IC20'] = ICx_est[2,'x']
results['IC30'] = ICx_est[3,'x']
results['IC40'] = ICx_est[4,'x']
results['IC50'] = ICx_est[5,'x']
results['IC60'] = ICx_est[6,'x']
results['IC70'] = ICx_est[7,'x']
results['IC80'] = ICx_est[8,'x']
results['IC90'] = ICx_est[9,'x']
results['maxEfficacy'] = max(getYcurve(res)) #get the maximum efficacy of the drug
results['bottom_asymptote'] = res@pars['bottom']
results['top_asymptote'] = res@pars['top']
results['hillSlope'] =  res@pars['scal']
fittedVals <- data.frame(fittedX = getXcurve(res),
fittedY = getYcurve(res))
results <- cbind(results,fittedVals)
results
}
tmp_iterator <- function(df){
tryCatch({
stats <- get_drugResponse_stats(df$conc, df$normViability, useLog=T)
},error=function(e){
print(dim(df))
print(df$conc)
print(df$normViability)
print(unique(df$cellLine))
print(unique(df$drug))
print(unique(df$experiment))
print(e)
stop('stopped')
})
}
UCF_normViab <- 'syn2773870'
UCF_normViab <- synGet(UCF_normViab)
UCF_normViab <- read.delim(UCF_normViab@filePath, check.names=F, sep="\t", header=T,stringsAsFactors = FALSE)
HS_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11") & UCF_normViab$drug %in% drugs,]
HS_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11") & UCF_normViab$drug %in% drugs,]
HS_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11") & UCF_normViab$drug %in% drugs,]
knitr::opts_chunk$set(echo = FALSE)
library("synapseClient")
library("nplr")
library("plyr")
library("dplyr")
library("data.table")
library("plotly")
library("reshape2")
library("ggplot2")
library("foreach")
library("pander")
synapseLogin()
get_drugResponse_stats <- function(conc,viability,...){
res <- nplr(conc, viability,...)
results <- getAUC(res)
results['goodNess_of_fit'] <- getGoodness(res)[1]
results['stdErr'] <- getStdErr(res)[1]
ICx_est = getEstimates(res, targets= c(.10,.20,.30,.40,.50,.60,.70,.80,.90))
results['IC10'] = ICx_est[1,'x']
results['IC20'] = ICx_est[2,'x']
results['IC30'] = ICx_est[3,'x']
results['IC40'] = ICx_est[4,'x']
results['IC50'] = ICx_est[5,'x']
results['IC60'] = ICx_est[6,'x']
results['IC70'] = ICx_est[7,'x']
results['IC80'] = ICx_est[8,'x']
results['IC90'] = ICx_est[9,'x']
results['maxEfficacy'] = max(getYcurve(res)) #get the maximum efficacy of the drug
results['bottom_asymptote'] = res@pars['bottom']
results['top_asymptote'] = res@pars['top']
results['hillSlope'] =  res@pars['scal']
fittedVals <- data.frame(fittedX = getXcurve(res),
fittedY = getYcurve(res))
results <- cbind(results,fittedVals)
results
}
tmp_iterator <- function(df){
tryCatch({
stats <- get_drugResponse_stats(df$conc, df$normViability, useLog=T)
},error=function(e){
print(dim(df))
print(df$conc)
print(df$normViability)
print(unique(df$cellLine))
print(unique(df$drug))
print(unique(df$experiment))
print(e)
stop('stopped')
})
}
UCF_normViab <- 'syn2773870'
UCF_normViab <- synGet(UCF_normViab)
UCF_normViab <- read.delim(UCF_normViab@filePath, check.names=F, sep="\t", header=T,stringsAsFactors = FALSE)
UCF_normViab$cellLine <- gsub("^ ", "", UCF_normViab$cellLine)
UCF_normViab$cellLine <- gsub("Nf2 --", "Nf2--", UCF_normViab$cellLine)
#drop unnecassary cols
drop_cols <- c('plate', 'medianDMSO', 'viability')
#MGH_normViab <- MGH_normViab[, !colnames(MGH_normViab) %in% drop_cols]
UCF_normViab <- UCF_normViab[, !colnames(UCF_normViab) %in% drop_cols]
# Drug response
doseResp <- ddply(.data=UCF_normViab, .variables = c('drug', 'cellLine', 'experiment'),
.fun = tmp_iterator, .parallel = T)
doseResp_r <- ddply(.data=UCF_normViab, .variables = c('drug', 'cellLine', 'experiment','replicate'),
.fun = tmp_iterator, .parallel = T)
doseResp_new <- ddply(.data=UCF_normViab, .variables = c('drug', 'cellLine'),
.fun = tmp_iterator, .parallel = T)
doseResp_r$IC50_nM <- (doseResp_r$IC50)*1000000000
drugs <- c("CUDC907","GSK2126458","Panobinostat")
myColors1 <- c("#BF2B2B", "#5E0F22","#EC91D8","#384DEA","#4D9DE0")
names(myColors1) <- c("MS01", "MS02", "MS03", "MSC11", "MS12")
colScaleMouse <- scale_color_manual(name = "grp", values = myColors1)
myColors <- c("#BF2B2B", "#384DEA")
names(myColors) <- c("HS01", "HS11")
colScaleHuman <- scale_color_manual(name = "grp",values = myColors)
###########
HS_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11") & UCF_normViab$drug %in% drugs,]
HS_doseResp <- doseResp[doseResp$cellLine %in% c("HS01","HS11") & doseResp$drug %in% drugs,]
HS_doseResp <- HS_doseResp[order(HS_doseResp$IC50),]
labelVal <- as.integer(c(min(log10(HS_normViab$conc*(1e+6))), median(log10(HS_normViab$conc*(1e+6))), max(log10(HS_normViab$conc*(1e+6)))))
p1 <- ggplot(HS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p1 <- p1 + geom_point(aes_string(color="cellLine"))
p1 <- p1 + geom_line(data = HS_doseResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p1 <- p1 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p1 <- p1 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p1 <- p1 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p1 <- p1 + coord_cartesian(ylim = c(0, 125))
p1 <- p1 + colScaleHuman
p1
ggsave(filename = "HS_drug_response_2Dplot.pdf",width = 8, height = 4)
HS_doseResp_r <- doseResp_r[doseResp_r$cellLine %in% c("HS01","HS11") & doseResp_r$drug %in% drugs,]
HS_doseResp_r <- HS_doseResp_r[order(HS_doseResp_r$IC50),]
HS_doseResp_r$grp <- paste(HS_doseResp_r$cellLine,HS_doseResp_r$replicate)
p2 <- ggplot(HS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p2 <- p2 + geom_point(aes_string(color="cellLine"))
p2 <- p2 + geom_line(data = HS_doseResp_r, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = grp))
p2 <- p2 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p2 <- p2 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p2 <- p2 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p2 <- p2 + coord_cartesian(ylim = c(0, 125))
p2 <- p2 + colScaleHuman
p2
ggsave(filename = "HS_rep_drug_response_2Dplot.pdf",width = 8, height = 4)
HS_doseResp$IC50_nM<-HS_doseResp$IC50*1000000000
foo<-distinct(filter(select(HS_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("HS01", "HS11")))
HS_doseResp$IC50_nM<-HS_doseResp$IC50*1000000000
foo<-distinct(filter(dplyr::select(HS_doseResp, drug, cellLine, IC50_nM, Simpson), drug %in% c("CUDC907", "GSK2126458", "Panobinostat") & cellLine %in% c("HS01", "HS11")))
colnames(foo)<-c("Drug", "Cell Line", "IC50 (nM)", "Simpson AUC")
pander(foo)
HS_normViab <- UCF_normViab[UCF_normViab$cellLine %in% c("HS01","HS11") & UCF_normViab$drug %in% drugs,]
HS_doseResp <- doseResp[doseResp$cellLine %in% c("HS01","HS11") & doseResp$drug %in% drugs,]
HS_doseResp <- HS_doseResp[order(HS_doseResp$IC50),]
labelVal <- as.integer(c(min(log10(HS_normViab$conc*(1e+6))), median(log10(HS_normViab$conc*(1e+6))), max(log10(HS_normViab$conc*(1e+6)))))
p1 <- ggplot(HS_normViab, aes(x = log10(conc*(1e+6)), y = normViability*100))
p1 <- p1 + geom_point(aes_string(color="cellLine"))
p1 <- p1 + geom_line(data = HS_doseResp, aes(x = fittedX+6, y = fittedY*100, colour = cellLine, group = cellLine))
p1 <- p1 + facet_grid(. ~ drug) + theme_bw(base_size = 15)
p1 <- p1 + geom_hline(aes(yintercept=50), color='grey50', linetype='dashed')
p1 <- p1 + xlab(expression(paste('concentration (log10[',mu,'M])', sep = ""))) + ylab('cell viability %')
p1 <- p1 + coord_cartesian(ylim = c(0, 125))
p1 <- p1 + colScaleHuman
p1
ggsave(filename = "HS_drug_response_2Dplot.pdf",width = 8, height = 4)
